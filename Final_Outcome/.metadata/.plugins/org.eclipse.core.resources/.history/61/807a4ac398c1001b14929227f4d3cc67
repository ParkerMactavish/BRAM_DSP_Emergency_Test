#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xil_io.h"
#include "xparameters.h"
#include "xgpio.h"

int main()
{
	XGpio inst_gpio, bram_gpio;
	XGpio_Initialize(&inst_gpio, XPAR_GPIO_0_DEVICE_ID);
	XGpio_Initialize(&bram_gpio, XPAR_GPIO_1_DEVICE_ID);
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10000000010110001000110001000000);	//BRAM1[3] <= BRAM1[2] * BRAM0[0]
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10000000010110001001110001101011);	//BRAM1[7] <= BRAM1[3] * BRAM0[11]
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10000011010110001010100011111111);	//BRAM1[10] <= BRAM1[7] * BRAM0[31] + C
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10011011010110001011010011000001);	//BRAM1[13] <= C - BRAM1[6] * BRAM0[1]
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10001011010110001011111111100000);	//BRAM1[15] <= BRAM1[31] * BRAM0[0] - C - 1
	printf("Done Test 1:\n");
	for (int i = 0; i < 32; i ++) {
		printf("%d: %x\n", i, Xil_In32(XPAR_AXI_BRAM_CTRL_1_S_AXI_BASEADDR + (i << 2)));
	}
	for (int i = 0; i < 32; i ++) {
		Xil_Out32(XPAR_AXI_BRAM_CTRL_2_S_AXI_BASEADDR + (i << 2), (i + 1) * (i + 1));
	}
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10000000010110001100000001000000);	//16, 2, 0
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10000000010110001100010001101011);	//17, 3, 11
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10000011010110001100100011111111);	//18, 7, 31
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10011011010110001100110011000001);	//19, 6, 1
	XGpio_DiscreteWrite(&inst_gpio, 1, 0b10001011010110001101001111100000);	//20, 31, 0
	printf("Done Test 2:\n");
	for (int i = 0; i < 32; i ++) {
		printf("%d: %x\n", i, Xil_In32(XPAR_AXI_BRAM_CTRL_1_S_AXI_BASEADDR + (i << 2)));
	}
    return 0;
}
